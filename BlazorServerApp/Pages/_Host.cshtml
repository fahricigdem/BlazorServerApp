@page "/"
@namespace BlazorServerApp.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>BlazorServerApp</title>
    <base href="~/" />
    <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css" />
    <link href="css/site.css" rel="stylesheet" />
    <link href="BlazorServerApp.styles.css" rel="stylesheet" />
</head>
<body onscroll="getScrollX()" oncontextmenu="return false;">
    <component type="typeof(App)" render-mode="ServerPrerendered" />

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>
    <script src="https://code.jquery.com/jquery-1.12.4.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script>
        window.getScrollX = function () { myFunction() };

        function myFunction() {
            var top = window.pageYOffset || document.documentElement.scrollTop
            var left = window.pageXOffset || document.documentElement.scrollLeft
            //console.log(left, top)

            //DotNet.invokeMethodAsync('BlazorServerApp', 'GetScroll', parseInt(left),parseInt(top))

        };


        //const takip = document.querySelector("#takip")

        //function outputsize() {
          //  console.log("takip:" ,takip.offsetWidth, takip.offsetHeight)
            //DotNet.invokeMethodAsync('BlazorServerApp', 'GetSize', parseInt(takip.pageXOffset), parseInt(takip.offsetHeight))
        //}

        //new ResizeObserver(outputsize).observe(takip)
        //outputsize()



        window.takipEt = function () {

            const observer = new ResizeObserver(
                e => {
                    console.log(e[0].contentRect.height)
                    DotNet.invokeMethodAsync('BlazorServerApp', 'GetSize', parseInt(e[0].contentRect.height))
                }

            )

            observer.observe(takip)



        }

        let id;
        window.getElement = function (element, dotNetObject) {

            $("#svgContainerId").load("test.svg", function () {
                $("#mySvg").click(function (e) {
                    console.log(e.target.id)
                    id = e.target.id
                    e.target.setAttribute("fill", "green");
                    dotNetObject.invokeMethodAsync('GetId', id.toString());
                })
            });

            @*console.log("1111");
            element.addEventListener("load", function () {
                var doc = this.getSVGDocument();
                console.log(element.id);
                console.log("2222");

                doc.addEventListener("click", function (e) {
                    console.log(e.target.id);
                    id = e.target.id
                    e.target.setAttribute("fill", "green");
                    dotNetObject.invokeMethodAsync('GetId', id.toString());


                })

            });*@

        }


        @*window.setSvg = function (element) {
            console.log("#### " + element.id);
            $("#svgContainerId").load("test.svg", function () {
                $("#mySvg").click(function (e) {
                    console.log(e.target.id)
                })
            });
            
        }*@


        window.setSvg = function (dotNetObject) {
            $("#childParent").load("childSvg.svg", function () {
                $("#childSvg2").click(function (e) {
                    dotNetObject.invokeMethodAsync('Yazar', e.target.id.toString());
                    console.log(e.target.id)    
                })

                document.getElementById("childSvg2").addEventListener('contextmenu', e => {
                    e.target.setAttribute("fill", "green");
                });

                document.getElementById("rec3").setAttribute("fill", "yellow");


            });

        }


        window.getSVG_XY = function(svg, x, y) {
            var pt = svg.createSVGPoint();
            pt.x = x;
            pt.y = y;
            pt = pt.matrixTransform(svg.getScreenCTM().inverse());
            return pt.x + " " + pt.y;
        };


    </script>


    <script src="_framework/blazor.server.js"></script>
</body>
</html>
