@page "/"
@namespace BlazorServerApp.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>BlazorServerApp</title>
    <base href="~/" />
    <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css" />
    <link href="css/site.css" rel="stylesheet" />
    <link href="BlazorServerApp.styles.css" rel="stylesheet" />
</head>
<body onscroll="getScrollX()">
    <component type="typeof(App)" render-mode="ServerPrerendered" />

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>
    <script>
        window.getScrollX = function () { myFunction() };

        function myFunction() {
            var top = window.pageYOffset || document.documentElement.scrollTop
            var left = window.pageXOffset || document.documentElement.scrollLeft
            //console.log(left, top)

            //DotNet.invokeMethodAsync('BlazorServerApp', 'GetScroll', parseInt(left),parseInt(top))
  
        };


        //const takip = document.querySelector("#takip")

        //function outputsize() {
          //  console.log("takip:" ,takip.offsetWidth, takip.offsetHeight)
            //DotNet.invokeMethodAsync('BlazorServerApp', 'GetSize', parseInt(takip.pageXOffset), parseInt(takip.offsetHeight))
        //}

        //new ResizeObserver(outputsize).observe(takip)
        //outputsize()

        

        window.takipEt = function () {

            const observer = new ResizeObserver(
                e => {
                    console.log(e[0].contentRect.height)
                    DotNet.invokeMethodAsync('BlazorServerApp', 'GetSize', parseInt(e[0].contentRect.height))
                }

            )

            observer.observe(takip)



        }


        



    </script>
    <script src="_framework/blazor.server.js"></script>
</body>
</html>
